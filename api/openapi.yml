openapi: 3.0.0
info:
  title: API Documentación con OpenAPI
  description: API de ejemplo documentada con OpenAPI y Swagger
  version: 1.0.0

servers:
  - url: /ms-obtencion-data/ms-obtencion-data
    description: Servidor de desarrollo
  - url: http://localhost:8080/api/data
    description: Ruta base de los endpoints

paths:
  /api/data/obtenerClientes:
    get:
      description: Obtiene lista de clientes (todos o por rut si se provee)
      x-eov-operation-handler: clientes
      operationId: clienteRut
      parameters:
        - in: query
          name: rut
          schema:
            type: string
          required: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listaClientes"
        "204":
          description: Sin Contenido
        "400":
          description: error 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorGenerico'
        "403":
          description: Acceso no permitido al contenido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorGenerico'
        "404":
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorGenerico'
        "500":
          description: Error interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorGenerico'
      tags:
        - Clientes

    
components:
  schemas:
  
    Cliente:
      type: object
      required:
        - rut
        - datos
      properties:
        rut:
          type: string
          example: "12345678-9"
        datos:
          type: array
          items:
            type: object
            required:
              - nombreCompleto
              - cupoClp
              - cupoUsd
              - tipoTarjeta
            properties:
              nombreCompleto:
                type: string
                example: "Juan Pérez"
              cupoClp:
                type: string
                example: "500000"
              cupoUsd:
                type: string
                example: "600"
              tipoTarjeta:
                type: string
                example: "Visa Gold"

    DatoCliente:
      type: object
      properties:
        nombreCompleto:
          type: string
          example: "Juan Pérez"
        Cupo:
          type: string
          example: "500000"
        tipoTarjeta:
          type: string
          example: "Visa Gold"

    RespuestaCreacion:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        msg:
          type: string
          example: Cliente creado correctamente
    listaClientes:
      type: array
      items:
        $ref: "#/components/schemas/Cliente"

    ErrorGenerico:
      type: object
      properties:
        message:
          type: string
          example: Ocurrió un error inesperado
        code:
          type: integer
          example: 500

